library(pdftools)
files <- pdf_text("data")
files <- file.show("data")
files <- list.files("data")
doc <- pdf_text(files)
doc <- pdf_text(paste0("data",files))
doc <- pdf_text(paste0("data/",files))
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- as.data.frame(doc,stringsAsFactors = F)
datasetTemp <- as.data.frame(text=doc,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- as.data.frame(text=doc,stringsAsFactors = F)
datasetTemp <- data.frame(text=doc,stringsAsFactors = F)
datasetTemp
datasetTemp$id <- 1
datasetTemp$class <- "plano"
datasetTemp <- data.frame(id <- 1, text=doc, class="plano",stringsAsFactors = F)
names(datasetTemp) <- c("id","text","class")
datasetTemp
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
#texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
library(dplyr)
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
#texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
library(tidytext)
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
#texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
library(pdftools)
library(dplyr)
library(tidytext)
files <- list.files("data")
doc <- pdf_text(paste0("data/",files))
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(id <- 1, text=doc, class="plano",stringsAsFactors = F)
names(datasetTemp) <- c("id","text","class")
datasetTemp
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
#texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
library(tm)
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
#texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
book_words <- myDataset %>%
unnest_tokens(word, text,to_lower = TRUE) %>%
count(file,word, sort = TRUE) %>% ungroup() %>% as.data.frame()
book_words <- book_words[order(book_words$file),]
names(book_words) <- c("file","word","f")
conta <- function(x) {
y <- 0
for(i in 1:length(x)) {
y <- y+1
}
return(y)
}
bind_tfidf <- function(files,f,n) {
nfiles <- length(unique(book_words$file))
nfiles <- rep(nfiles,length(book_words$file))
tf <- 1+log2(f)
idf <- log2(nfiles/n)
tf_idf <- tf * idf
book_words$df <- tf
book_words$idf <- idf
book_words$tf_idf <- tf_idf
}
total_file <- book_words
total_file <- aggregate(total_file,by = list(total_file$word),conta)
total_file <- total_file[,-2:-3]
names(total_file) <- c("word","f")
book_words <- left_join(book_words, total_file, by = "word")
names(book_words) <- c("file","word","n","f")
head(book_words)
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
book_words <- myDataset %>%
unnest_tokens(word, text,to_lower = TRUE) %>%
count(file,word, sort = TRUE) %>% ungroup() %>% as.data.frame()
book_words <- book_words[order(book_words$file),]
names(book_words) <- c("file","word","f")
conta <- function(x) {
y <- 0
for(i in 1:length(x)) {
y <- y+1
}
return(y)
}
bind_tfidf <- function(files,f,n) {
nfiles <- length(unique(book_words$file))
nfiles <- rep(nfiles,length(book_words$file))
tf <- 1+log2(f)
idf <- log2(nfiles/n)
tf_idf <- tf * idf
book_words$df <- tf
book_words$idf <- idf
book_words$tf_idf <- tf_idf
}
total_file <- book_words
total_file <- aggregate(total_file,by = list(total_file$word),conta)
total_file <- total_file[,-2:-3]
names(total_file) <- c("word","f")
book_words <- left_join(book_words, total_file, by = "word")
names(book_words) <- c("file","word","n","f")
head(book_words)
# Create matrix with TF-IDF
book_words$tf_idf <- bind_tfidf(book_words$file,book_words$f,book_words$n)
print(book_words)
read <- readPDF(control = list(text = "-layout"))
files <- list.files("data")
doc <- pdf_text(paste0("data/",files))
read <- readPDF(control = list(text = "-layout"))
doc <- Corpus(URISource("data/Plano de Ensino - VA.pdf"), readerControl = list(reader = read))
doc <- content(document[[1]])
doc <- content(doc[[1]])
had(doc)
head(doc)
files <- list.files("data")
doc <- pdf_text(paste0("data/",files))
doc
source('E:/pdfReader/pReader.R')
library(pdftools)
library(dplyr)
library(tm)
library(tidytext)
files <- list.files("data")
files <- list.files("data")
doc <- pdf_text(paste0("data/",files))
files <- as.data.frame(list.files("data"))
files <- as.data.frame(list.files("data"),stringsAsFactors = F)
files <- as.data.frame(name=list.files("data"),stringsAsFactors = F)
files <- data.frame(name=list.files("data"),stringsAsFactors = F)
doc <- pdf_text(paste0("data/",files))
files <- list.files("data")
doc <- pdf_text(paste0("data/",files))
doc <- pdf_text(paste0("data/",files[1]))
doc <- apply(paste0("data/",files),pdf_text)
doc <- sapply(paste0("data/",files),pdf_text)
myDataset <- data.frame(stringsAsFactors = FALSE)
length(doc)[1]
strsplit(doc,"-")
strsplit(doc,split = "-")
strsplit(x = doc,split = "-")
strsplit(x = doc[1],split = "-")
filename <- sapply(paste0("data/",files),pdf_text)
files <- list.files("data")
filename <- sapply(paste0("data/",files),pdf_text)
myDataset <- data.frame(stringsAsFactors = FALSE)
str_split(x = doc[1],split = "-")
library("stringr")
library("stringR")
strsplit(x = doc[1],split = "-")
strsplit(x = filename[1],split = "-")
strsplit(x = file,split = "-")
file
files
files[1]
strsplit(x = files,split = "-")
strsplit(x = files[1],split = "-")
strsplit(x = files[1],split = "-")[2]
strsplit(x = files[1],split = "-")[1]
strsplit(x = files[1],split = "-")[[1]][1]
strsplit(x = files[1],split = "-")[[1]][2]
files <- list.files("data")
filename <- sapply(paste0("data/",files),pdf_text)
files <- list.files("data",recursive = T)
filename <- sapply(paste0("data/",files),pdf_text)
library(pdftools)
library(dplyr)
library(tidytext)
library(tm)
library("string")
files <- list.files("data",recursive = T)
filename <- sapply(paste0("data/",files),pdf_text)
strsplit(filename,split = '/')
strsplit(filename,split = "/")
strsplit(filename[1],split = "/")
strsplit(filename[1],split = "//",)
strsplit(filename[1],split = " ",)
strsplit(filename[1],split = " ")
strsplit(filename[1],split = "//")
strsplit(filename[[1]][1],split = "//")
strsplit(filename[[1]][1],split = "/")
filename
filename[[1]]
filename[[1]][1]
files <- list.files("data",recursive = T)
files <- list.files("data",recursive = T)
files[[1]]
files[[1]][1]
files[[1]][1][1]
doc <- sapply(paste0("data/",files),pdf_text)
myDataset <- data.frame(stringsAsFactors = FALSE)
doc[[1]]
files <- list.files("data",recursive = T)
classes <- files[1]
classes <- files[[1]]
classes <- files[[1]][1]
classes
classes <- strsplit(files[[1]],"/")
classes <- strsplit(files[[1]],"/")[1]
classes <- strsplit(files[[1]][1],"/")
classes <- strsplit(files[[1]][1],"/")[1]
classes <- strsplit(files[[1]][1],"/")[[1]]
files <- list.files("data",recursive = T)
classes <- strsplit(files[[1]][1],"/")
strsplit(files[[1]][1],"/")
strsplit(files[[1]][1],"/")[1]
strsplit(files[[1]][1],"/")[[1]]
strsplit(files[[1]][1],"/")[[1]][1]
strsplit(files,"/")[[1]][1]
strsplit(files,"/")[[]][1]
strsplit(files,"/")[[1]][1]
strsplit(files,"/")
data.frame(strsplit(files,"/"))
strsplit(files,"/")
data.frame(strsplit(files,"/"))
docs <- data.frame(strsplit(files,"/"))
namers(docs) <- c("a","b")
names(docs) <- c("a","b")
head(docs)
docs <- data.frame(strsplit(files,"/"),stringsAsFactors = F)
docs <- data.frame(class=strsplit(files,"/"),stringsAsFactors = F)
strsplit(files,"/")
sapply(docs, strsplit)
