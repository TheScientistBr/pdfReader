classes
classes <- strsplit(files[[1]],"/")
classes <- strsplit(files[[1]],"/")[1]
classes <- strsplit(files[[1]][1],"/")
classes <- strsplit(files[[1]][1],"/")[1]
classes <- strsplit(files[[1]][1],"/")[[1]]
files <- list.files("data",recursive = T)
classes <- strsplit(files[[1]][1],"/")
strsplit(files[[1]][1],"/")
strsplit(files[[1]][1],"/")[1]
strsplit(files[[1]][1],"/")[[1]]
strsplit(files[[1]][1],"/")[[1]][1]
strsplit(files,"/")[[1]][1]
strsplit(files,"/")[[]][1]
strsplit(files,"/")[[1]][1]
strsplit(files,"/")
data.frame(strsplit(files,"/"))
strsplit(files,"/")
data.frame(strsplit(files,"/"))
docs <- data.frame(strsplit(files,"/"))
namers(docs) <- c("a","b")
names(docs) <- c("a","b")
head(docs)
docs <- data.frame(strsplit(files,"/"),stringsAsFactors = F)
docs <- data.frame(class=strsplit(files,"/"),stringsAsFactors = F)
strsplit(files,"/")
sapply(docs, strsplit)
classes <- data.frame(class=strsplit(files[[1]][1],"/"))
classes <- data.frame(class=list.files("data",recursive = F))
classes <- data.frame(class=list.files("data",recursive = F),stringsAsFactors = F)
classes <- as.data.frame(class=list.files("data",recursive = F),stringsAsFactors = F)
classes <- data.frame(class=list.files("data",recursive = F),stringsAsFactors = F)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=t(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=list(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=t(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=m(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=p(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=character(list.files("data",recursive = F)),stringsAsFactors = F)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
classes
doc <- sapply(paste0("data/",files),pdf_text)
library(pdftools)
library(dplyr)
library(tidytext)
library(tm)
library("string")
library("stringr")
doc <- sapply(paste0("data/",files),pdf_text)
for(myClass in classes) {
files <- list.files(paste0("data",myClass),recursive = F)
doc <- sapply(paste0(files),pdf_text)
}
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
for(myClass in classes) {
files <- list.files(paste0("data",myClass),recursive = F)
doc <- sapply(paste0(files),pdf_text)
}
for(myClass in classes) {
files <- list.files(paste0("data",myClass),recursive = F)
doc <- sapply(files,pdf_text)
}
myClass <- "a"
files <- list.files(paste0("data",myClass),recursive = F)
paste0("data",myClass)
files <- list.files(paste0("data/",myClass),recursive = F)
doc <- sapply(files,pdf_text)
files
doc <- sapply(paste0("data/",myClass,files),files,pdf_text)
doc <- sapply(paste0("data/",myClass,files),pdf_text)
doc <- sapply(paste0("data/",myClass,"/",files),pdf_text)
doc <- data.frame()
for(myClass in classes) {
files <- list.files(paste0("data/",myClass),recursive = F)
doc <- rbind(doc,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
doc <- data.frame()
for(myClass in classes) {
files <- list.files(paste0("data/",myClass),recursive = F)
doc <- rbind(doc,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
doc <- rbind(doc,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
doc <- rbind(doc,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
doc <- rbind(docs,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- data.frame(sapply(paste0("data/",myClass,"/",files),pdf_text))
doc <- rbind(docs,sapply(paste0("data/",myClass,"/",files),pdf_text))
}
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- data.frame(sapply(paste0("data/",myClass,"/",files),pdf_text))
doc <- rbind(doc,docs)
}
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- data.frame(sapply(paste0("data/",myClass,"/",files),pdf_text))
doc <- rbind(doc,docs)
}
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- data.frame(sapply(paste0("data/",myClass,"/",files),pdf_text))
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
doc <- rbind(doc,as.data.frame(docs))
docs$`data/a/bbil6-a3- practicing mdm in the absence of an enterprise mdm - 351620.pdf`
names(docs) <- c("texto")
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
dim(docs)
length(docs)
as.data.frame(docs)
docs[[1]]
character(docs[[1]])
as.character(docs[[1]])
docs[[1]]
c(docs[[1]])
as.character(docs[[1]])
print(docs[[1]])
print(unlist(docs[[1]]))
unlist(docs[[1]])
writeLines(unlist(lapply(docs[[1]], paste, collapse=" ")))
doc <- rbind(doc,writeLines(unlist(lapply(docs[[1]], paste, collapse=" "))))
for(i in 1:length(docs)) {
docLn <- writeLines(unlist(lapply(docs[[1]], paste, collapse=" ")))
}
dput(docs)
dput(docs[[1]])
for(i in 1:length(docs)) {
docLn <- append(dput(docs[[i]]))
}
for(i in 1:length(docs)) {
docLn <- append(dput(docs[[i]]),after = length(docs[[i]]))
}
docLn <- append(dput(docs[[i]]),values = 0:1,after = length(docs[[i]]))
for(i in 1:length(docs)) {
docLn <- append(dput(docs[[i]]),values = 0:1,after = length(docs[[i]]))
}
doc <- rbind(doc,docLn)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- append(dput(docs[[i]]),values = 0:1,after = length(docs[[i]]))
}
doc <- rbind(doc,docLn)
}
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- append(dput(docs[[i]]),values = 0:1,after = length(docs[[i]]))
}
doc <- rbind(doc,docLn)
}
docLn <- dput(docs[[i]])
docLn
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
sink(docs[[1]])
sink(docs[1])
sink(as.character(docs[[1]]))
toString(docs[[1]])
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
}
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
}
doc <- rbind(doc,docLn)
}
doc[1]
doc[2]
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,docLn)
}
}
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,docLn)
}
}
doc[1]
doc[1,1]
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(id <- 1:length(filename)[1], text=filename, class=str_split(doc),stringsAsFactors = F)
doc[1,1]
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,data.frame(text=docLn,class=myClass))
}
}
doc$class
doc$text
clear
doc$id <- 1:length(doc$class)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,data.frame(text=docLn,class=myClass))
}
}
doc$id <- 1:length(doc$class)
doc <- data.frame(id=doc$id,text=doc$text,class=doc$class,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- doc
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("pt"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
datasetTemp <- doc
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
datasetTemp <- doc
names(datasetTemp) <- c("id","text","class")
datasetTemp <- doc
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp$text <- as.character(datasetTemp$text)
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp$text <- as.character(datasetTemp$text)
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
myDataset <- data.frame(stringsAsFactors = FALSE)
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)),deparse.level = 0, stringsAsFactors =  FALSE)
}
colnames(myDataset) <- c("file","class","text")
head(myDataset)
myDataset[1]
myDataset[1,]
datasetTemp <- data.frame(doc,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp$text <- as.character(datasetTemp$text)
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)), stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
book_words <- myDataset %>%
unnest_tokens(word, text,to_lower = TRUE) %>%
count(file,word, sort = TRUE) %>% ungroup() %>% as.data.frame()
book_words <- book_words[order(book_words$file),]
names(book_words) <- c("file","word","f")
book_words
conta <- function(x) {
y <- 0
for(i in 1:length(x)) {
y <- y+1
}
return(y)
}
bind_tfidf <- function(files,f,n) {
nfiles <- length(unique(book_words$file))
nfiles <- rep(nfiles,length(book_words$file))
tf <- 1+log2(f)
idf <- log2(nfiles/n)
tf_idf <- tf * idf
book_words$df <- tf
book_words$idf <- idf
book_words$tf_idf <- tf_idf
}
total_file <- book_words
total_file <- aggregate(total_file,by = list(total_file$word),conta)
total_file <- total_file[,-2:-3]
names(total_file) <- c("word","f")
book_words <- left_join(book_words, total_file, by = "word")
names(book_words) <- c("file","word","n","f")
head(book_words)
# Create matrix with TF-IDF
book_words$tf_idf <- bind_tfidf(book_words$file,book_words$f,book_words$n)
print(book_words)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
myClass <- "a"
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
i <-1
docLn <- toString(docs[[i]])
doc <- rbind(doc,data.frame(text=docLn,class=myClass))
doc$text <- as.character(doc$text)
doc$class <- as.character(doc$class)
doc <- data.frame(id=1:length(doc$class),text=doc$text,class=doc$class,stringsAsFactors = F)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,data.frame(text=docLn,class=myClass))
doc$text <- as.character(doc$text)
doc$class <- as.character(doc$class)
}
}
doc <- data.frame(id=1:length(doc$class),text=doc$text,class=doc$class,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp$text <- as.character(datasetTemp$text)
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)), stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
book_words <- myDataset %>%
unnest_tokens(word, text,to_lower = TRUE) %>%
count(file,word, sort = TRUE) %>% ungroup() %>% as.data.frame()
book_words <- book_words[order(book_words$file),]
book_words
head(book_words)
library(pdftools)
library(dplyr)
library(tidytext)
library(tm)
library("stringr")
print(book_words)
head(book_words)
classes <- data.frame(class=c(list.files("data",recursive = F)),stringsAsFactors = F)
docs <- data.frame()
doc <- data.frame()
for(myClass in classes$class) {
files <- list.files(paste0("data/",myClass),recursive = F)
docs <- sapply(paste0("data/",myClass,"/",files),pdf_text)
for(i in 1:length(docs)) {
docLn <- toString(docs[[i]])
doc <- rbind(doc,data.frame(text=docLn,class=myClass))
doc$text <- as.character(doc$text)
doc$class <- as.character(doc$class)
}
}
doc <- data.frame(id=1:length(doc$class),text=doc$text,class=doc$class,stringsAsFactors = F)
myDataset <- data.frame(stringsAsFactors = FALSE)
datasetTemp <- data.frame(doc,stringsAsFactors = F)
datasetTemp$text <- as.character(datasetTemp$text)
names(datasetTemp) <- c("id","text","class")
head(datasetTemp)
ct <- 0         # counter to read files
for(ind in 1:length(datasetTemp$id)) {
texto <- datasetTemp$text[ind]
texto <- paste(texto,collapse = " ")
texto <- gsub("<.*?>", "", texto)
documents <- Corpus(VectorSource(texto))
documents = tm_map(documents, tolower)
documents = tm_map(documents, removePunctuation)
texto  = tm_map(documents, removeNumbers)$content
texto <- tm_map(documents, removeWords,stopwords("en"))$content
myDataset <- rbind(myDataset,c(datasetTemp$id[ind],datasetTemp$class[ind],
t(texto)), stringsAsFactors =  FALSE)
}
myDataset <- data.frame(lapply(myDataset,as.character), stringsAsFactors = FALSE)
colnames(myDataset) <- c("file","class","text")
book_words <- myDataset %>%
unnest_tokens(word, text,to_lower = TRUE) %>%
count(file,word, sort = TRUE) %>% ungroup() %>% as.data.frame()
book_words <- book_words[order(book_words$file),]
names(book_words) <- c("file","word","f")
conta <- function(x) {
y <- 0
for(i in 1:length(x)) {
y <- y+1
}
return(y)
}
bind_tfidf <- function(files,f,n) {
nfiles <- length(unique(book_words$file))
nfiles <- rep(nfiles,length(book_words$file))
tf <- 1+log2(f)
idf <- log2(nfiles/n)
tf_idf <- tf * idf
book_words$df <- tf
book_words$idf <- idf
book_words$tf_idf <- tf_idf
}
total_file <- book_words
total_file <- aggregate(total_file,by = list(total_file$word),conta)
total_file <- total_file[,-2:-3]
names(total_file) <- c("word","f")
book_words <- left_join(book_words, total_file, by = "word")
names(book_words) <- c("file","word","n","f")
head(book_words)
# Create matrix with TF-IDF
book_words$tf_idf <- bind_tfidf(book_words$file,book_words$f,book_words$n)
head(book_words)
tail(book_words)
